c7 <- select(data, Serial, D4A.7:D4E.7, ROUND)
names(c7) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round")
c8 <- select(data, Serial, D4A.8:D4E.8, ROUND)
names(c8) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round")
c9 <- select(data, Serial, D4A.9:D4E.9, ROUND)
names(c9) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round")
edu <- bind_rows(c1,c2,c3,c4,c5,c6,c7,c8,c9)
View(edu)
filter(edu, hh == 1)
filter(edu, age == "U")
select(edu, age != "U")
filter(edu, age != "U")
edu <- filter(edu, age != "U")
edu
select(edu, hh, gender, age, edu_rec, round)
edu <- select(edu, hh, gender, age, edu_rec, round)
edu
edu <- mutate(edu, age = as.numeric(age))
edu
edu <- mutate(edu, age = ceiling(age))
edu
# export to json
edu_json <- toJSON(unname(split(edu, 1:nrow(edu))))
sink("education.json")
cat(edu_json)
sink()
c1 <- select(data, Serial, D4A.1:D4E.1, ROUND, D5)
names(c1) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head")
c2 <- select(data, Serial, D4A.2:D4E.2, ROUND, D5)
names(c2) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head")
c3 <- select(data, Serial, D4A.3:D4E.3, ROUND, D5)
names(c3) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head")
c4 <- select(data, Serial, D4A.4:D4E.4, ROUND, D5)
names(c4) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head")
c5 <- select(data, Serial, D4A.5:D4E.5, ROUND, D5)
names(c5) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head")
c6 <- select(data, Serial, D4A.6:D4E.6, ROUND, D5)
names(c6) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head")
c7 <- select(data, Serial, D4A.7:D4E.7, ROUND, D5)
names(c7) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head")
c8 <- select(data, Serial, D4A.8:D4E.8, ROUND, D5)
names(c8) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head")
c9 <- select(data, Serial, D4A.9:D4E.9, ROUND, D5)
names(c9) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head")
edu <- bind_rows(c1,c2,c3,c4,c5,c6,c7,c8,c9)
edu <- filter(edu, age != "U")
edu <- select(edu, hh, gender, age, edu_rec, round, head)
edu <- mutate(edu, age = as.numeric(age)) # coerce as.numeric
# ceiling age < 1 to round them to 1 -- coding is wierd anyway: 0.11, 0.6, ...
edu <- mutate(edu, age = ceiling(age))
edu
edu_json <- toJSON(unname(split(edu, 1:nrow(edu))))
sink("education.json")
cat(edu_json)
sink()
c1 <- select(data, Serial, D4A.1:D4E.1, ROUND, D5, M4)
names(c1) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line")
c2 <- select(data, Serial, D4A.2:D4E.2, ROUND, D5, M4)
names(c2) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line")
c3 <- select(data, Serial, D4A.3:D4E.3, ROUND, D5, M4)
names(c3) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line")
c4 <- select(data, Serial, D4A.4:D4E.4, ROUND, D5, M4)
names(c4) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line")
c5 <- select(data, Serial, D4A.5:D4E.5, ROUND, D5, M4)
names(c5) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line")
c6 <- select(data, Serial, D4A.6:D4E.6, ROUND, D5, M4)
names(c6) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line")
c7 <- select(data, Serial, D4A.7:D4E.7, ROUND, D5, M4)
names(c7) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line")
c8 <- select(data, Serial, D4A.8:D4E.8, ROUND, D5, M4)
names(c8) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line")
c9 <- select(data, Serial, D4A.9:D4E.9, ROUND, D5, M4)
names(c9) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line")
edu <- bind_rows(c1,c2,c3,c4,c5,c6,c7,c8,c9)
edu <- filter(edu, age != "U")
edu <- select(edu, hh, gender, age, edu_rec, round, head, pov_line)
edu <- mutate(edu, age = as.numeric(age)) # coerce as.numeric
# ceiling age < 1 to round them to 1 -- coding is wierd anyway: 0.11, 0.6, ...
edu <- mutate(edu, age = ceiling(age))
# export to json
edu_json <- toJSON(unname(split(edu, 1:nrow(edu))))
sink("education.json")
cat(edu_json)
sink()
data$D8
eco_contrib <- select(data, Serial, ROUND, D8)
split_D8 <- strsplit(as.character(eco_contrib$D8), split = " ")
serial <- rep(eco_contrib$Serial, sapply(split_D8, length))
round <- rep(eco_contrib$ROUND, sapply(split_D8, length))
eco_contrib_single <- data.frame(serial = serial, round = round, D8 = unlist(split_D8))
eco_contrib_single <- tbl_df(eco_contrib_single)
eco_contrib_single
table(eco_contrib_single$D8)
eco_contrib_single$D8 <- as.numeric(levels(eco_contrib_single$D8))[eco_contrib_single$D8]
eco_contrib_single$D8[eco_contrib_single$D8 %in% c(0)] <- 6
table(eco_contrib_single$D8)
names(eco_contrib_single) <- c("hh","round","eco_contrib")
eco_contrib_json <- toJSON(unname(split(eco_contrib_single, 1:nrow(eco_contrib_single))))
sink("eco_contributors.json")
cat(eco_contrib_json)
sink()
education
c1 <- select(data, Serial, D4A.1:D4E.1, ROUND, D5, M4)
names(c1) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line")
c2 <- select(data, Serial, D4A.2:D4E.2, ROUND, D5, M4)
names(c2) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line")
c3 <- select(data, Serial, D4A.3:D4E.3, ROUND, D5, M4)
names(c3) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line")
c4 <- select(data, Serial, D4A.4:D4E.4, ROUND, D5, M4)
names(c4) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line")
c5 <- select(data, Serial, D4A.5:D4E.5, ROUND, D5, M4)
names(c5) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line")
c6 <- select(data, Serial, D4A.6:D4E.6, ROUND, D5, M4)
names(c6) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line")
c7 <- select(data, Serial, D4A.7:D4E.7, ROUND, D5, M4)
names(c7) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line")
c8 <- select(data, Serial, D4A.8:D4E.8, ROUND, D5, M4)
names(c8) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line")
c9 <- select(data, Serial, D4A.9:D4E.9, ROUND, D5, M4)
names(c9) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line")
edu <- bind_rows(c1,c2,c3,c4,c5,c6,c7,c8,c9)
edu <- filter(edu, age != "U")
edu <- select(edu, hh, gender, age, edu_rec, round, head, pov_line)
edu <- mutate(edu, age = as.numeric(age)) # coerce as.numeric
# ceiling age < 1 to round them to 1 -- coding is wierd anyway: 0.11, 0.6, ...
edu <- mutate(edu, age = ceiling(age))
edu
c1 <- select(data, Serial, D4A.1:D4E.1, ROUND, D5, M4, S2)
names(c1) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line", "loc")
c2 <- select(data, Serial, D4A.2:D4E.2, ROUND, D5, M4, S2)
names(c2) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line", "loc")
c3 <- select(data, Serial, D4A.3:D4E.3, ROUND, D5, M4, S2)
names(c3) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line", "loc")
c4 <- select(data, Serial, D4A.4:D4E.4, ROUND, D5, M4, S2)
names(c4) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line", "loc")
c5 <- select(data, Serial, D4A.5:D4E.5, ROUND, D5, M4, S2)
names(c5) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line", "loc")
c6 <- select(data, Serial, D4A.6:D4E.6, ROUND, D5, M4, S2)
names(c6) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line", "loc")
c7 <- select(data, Serial, D4A.7:D4E.7, ROUND, D5, M4, S2)
names(c7) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line", "loc")
c8 <- select(data, Serial, D4A.8:D4E.8, ROUND, D5, M4, S2)
names(c8) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line", "loc")
c9 <- select(data, Serial, D4A.9:D4E.9, ROUND, D5, M4, S2)
names(c9) <- c("hh","gender","age", "edu_rec", "edu_type", "work", "round", "head", "pov_line", "loc")
edu <- bind_rows(c1,c2,c3,c4,c5,c6,c7,c8,c9)
edu <- filter(edu, age != "U")
edu <- select(edu, hh, gender, age, edu_rec, round, head, pov_line, loc)
edu$loc[edu$loc %in% c(7,8,9,10, 12)] <- 99
edu <- mutate(edu, age = as.numeric(age)) # coerce as.numeric
# ceiling age < 1 to round them to 1 -- coding is wierd anyway: 0.11, 0.6, ...
edu <- mutate(edu, age = ceiling(age))
edu
edu_json <- toJSON(unname(split(edu, 1:nrow(edu))))
sink("education.json")
cat(edu_json)
sink()
data <- tbl_df(data)
# PREPARE CHILDREN DATASET - PROFILE (select last round only)
data_round3 <- filter(data, ROUND == 3) # using round 3 as reference
# write a function for that, please !
c1 <- select(data_round3, Serial, D4A.1:D4E.1)
names(c1) <- c("hh","gender","age", "edu_rec", "edu_type", "work")
c2 <- select(data_round3, Serial, D4A.2:D4E.2)
names(c2) <- c("hh","gender","age", "edu_rec", "edu_type", "work")
c3 <- select(data_round3, Serial, D4A.3:D4E.3)
names(c3) <- c("hh","gender","age", "edu_rec", "edu_type", "work")
c4 <- select(data_round3, Serial, D4A.4:D4E.4)
names(c4) <- c("hh","gender","age", "edu_rec", "edu_type", "work")
c5 <- select(data_round3, Serial, D4A.5:D4E.5)
names(c5) <- c("hh","gender","age", "edu_rec", "edu_type", "work")
c6 <- select(data_round3, Serial, D4A.6:D4E.6)
names(c6) <- c("hh","gender","age", "edu_rec", "edu_type", "work")
c7 <- select(data_round3, Serial, D4A.7:D4E.7)
names(c7) <- c("hh","gender","age", "edu_rec", "edu_type", "work")
c8 <- select(data_round3, Serial, D4A.8:D4E.8)
names(c8) <- c("hh","gender","age", "edu_rec", "edu_type", "work")
c9 <- select(data_round3, Serial, D4A.9:D4E.9)
names(c9) <- c("hh","gender","age", "edu_rec", "edu_type", "work")
children <- bind_rows(c1,c2,c3,c4,c5,c6,c7,c8,c9)
# remove rows where age = "U" [code for NA in data provided]
#children <- children[!is.na(children$age),]
children <- filter(children, age != "U")
children <- mutate(children, age = as.numeric(age)) # coerce as.numeric
# sort by hh (id)
children <- arrange(children, hh)
# ceiling age < 1 to round them to 1 -- coding is wierd anyway: 0.11, 0.6, ...
children <- mutate(children, age = ceiling(age))
# export to json
children_json <- toJSON(unname(split(children, 1:nrow(children))))
# cat(test)
sink("children.json")
cat(children_json)
sink()
children
View(data)
expenditures_child <- select(data, Serial, ROUND, Q14)
split_Q14 <- strsplit(as.character(expenditures_child$Q14), split = " ")
serial <- rep(expenditures_child$Serial, sapply(split_Q14, length))
round <- rep(expenditures_child$ROUND, sapply(split_Q14, length))
expenditures_child_single <- data.frame(serial = serial, round = round, Q14 = unlist(split_Q14))
expenditures_child_single <- tbl_df(expenditures_child_single)
expenditures_child_single$Q14 <- as.numeric(levels(expenditures_child_single$Q14))[expenditures_child_single$Q14]
expenditures_child_single
table(expenditures_child$Q14)
table(expenditures_child_single$Q14)
expenditures_child_single$Q14[expenditures_child_single$Q14 %in% c(0)] <- 99
expenditures_child_single$Q14[expenditures_child_single$Q14 %in% c(1)] <- 3
expenditures_child_single$Q14[expenditures_child_single$Q14 %in% c(8)] <- 7
expenditures_child_single$Q14[expenditures_child_single$Q14 %in% c(14)] <- 12
table(expenditures_child_single$Q14)
names(expenditures_child_single) <- c("hh","round","exp_child")
expenditures_child_json <- toJSON(unname(split(expenditures_child_single, 1:nrow(expenditures_child_single))))
sink("expenditures_children.json")
cat(expenditures_child_json)
sink()
View(data)
outcomes <- select(data, Serial, ROUND, Q20, Q17, Q16, Q18)
# merge Q16
# (1,2,3) -> 1 [Education expenditures]
# (4,5,6) -> 2 [Health cares expenditures]
# (7,8,9) -> 3 [Food expenditures]
# (10, 11, 12, 13, 14) -> 99 [Other expenditures]
outcomes$Q16 <- as.numeric(levels(outcomes$Q16))[outcomes$Q16]
outcomes$Q16[outcomes$Q16 %in% c(1,2,3)] <- 1
outcomes$Q16[outcomes$Q16 %in% c(4,5,6)] <- 2
outcomes$Q16[outcomes$Q16 %in% c(7,8,9)] <- 3
outcomes$Q16[outcomes$Q16 %in% c(0, 10,11,12,13,14)] <- 99
names(outcomes) <- c("hh","round","imp", "needs", "exp_child_most", "cov_child_exp")
outcomes <- select(data, Serial, ROUND, Q20, Q17, Q16, Q18)
outcomes$Q16 <- as.numeric(levels(outcomes$Q16))[outcomes$Q16]
view(outcomes)
View(outcomes)
outcomes$Q16 <- as.numeric(levels(outcomes$Q16))[outcomes$Q16]
pdm1 <- read.table("./combined_3_rounds/pdm1.csv", sep = ",", header = TRUE, quote = "")
pdm2 <- read.table("./combined_3_rounds/pdm2.csv", sep = ",", header = TRUE, quote = "")
pdm3 <- read.table("./combined_3_rounds/pdm3.csv", sep = ",", header = TRUE, quote = "")
col_pdm1 <- names(pdm1)
col_pdm2 <- names(pdm2)
col_pdm3 <- names(pdm3)
comm_col <- intersect(intersect(col_pdm1, col_pdm2), col_pdm3)
pdm1_com <- pdm1[comm_col]
pdm2_com <- pdm2[comm_col]
pdm3_com <- pdm3[comm_col]
pdm1_com$ROUND <- 1
pdm2_com$ROUND <- 2
pdm3_com$ROUND <- 3
pdm <- rbind(pdm1_com, pdm2_com)
pdm <- rbind(pdm, pdm3_com)
serials_round1 <- unique(pdm[pdm$ROUND == 1,c("Serial")])
serials_round2 <- unique(pdm[pdm$ROUND == 2,c("Serial")])
serials_round3 <- unique(pdm[pdm$ROUND == 3,c("Serial")])
length(intersect(intersect(serials_round1,serials_round2), serials_round3)) # get 431 only
common_serials <- intersect(intersect(serials_round1,serials_round2), serials_round3)
data <- pdm[pdm$Serial %in% common_serials,]
# switching to dplyr now
data <- tbl_df(data)
data_round3 <- filter(data, ROUND == 3) # using round 3 as reference
# write a function for that, please !
c1 <- select(data_round3, Serial, D4A.1:D4E.1)
names(c1) <- c("hh","gender","age", "edu_rec", "edu_type", "work")
c2 <- select(data_round3, Serial, D4A.2:D4E.2)
names(c2) <- c("hh","gender","age", "edu_rec", "edu_type", "work")
c3 <- select(data_round3, Serial, D4A.3:D4E.3)
names(c3) <- c("hh","gender","age", "edu_rec", "edu_type", "work")
c4 <- select(data_round3, Serial, D4A.4:D4E.4)
names(c4) <- c("hh","gender","age", "edu_rec", "edu_type", "work")
c5 <- select(data_round3, Serial, D4A.5:D4E.5)
names(c5) <- c("hh","gender","age", "edu_rec", "edu_type", "work")
c6 <- select(data_round3, Serial, D4A.6:D4E.6)
names(c6) <- c("hh","gender","age", "edu_rec", "edu_type", "work")
c7 <- select(data_round3, Serial, D4A.7:D4E.7)
names(c7) <- c("hh","gender","age", "edu_rec", "edu_type", "work")
c8 <- select(data_round3, Serial, D4A.8:D4E.8)
names(c8) <- c("hh","gender","age", "edu_rec", "edu_type", "work")
c9 <- select(data_round3, Serial, D4A.9:D4E.9)
names(c9) <- c("hh","gender","age", "edu_rec", "edu_type", "work")
children <- bind_rows(c1,c2,c3,c4,c5,c6,c7,c8,c9)
children <- filter(children, age != "U")
children <- mutate(children, age = as.numeric(age)) # coerce as.numeric
# sort by hh (id)
children <- arrange(children, hh)
# ceiling age < 1 to round them to 1 -- coding is wierd anyway: 0.11, 0.6, ...
children <- mutate(children, age = ceiling(age))
outcomes <- select(data, Serial, ROUND, Q20, Q17, Q16, Q18)
outcomes$Q16 <- as.numeric(levels(outcomes$Q16))[outcomes$Q16]
outcomes <- select(data, Serial, ROUND, Q20, Q17, Q16)
outcomes$Q16 <- as.numeric(levels(outcomes$Q16))[outcomes$Q16]
outcomes <- select(data, Serial, ROUND, Q20, Q17, Q16, Q18)
# merge Q16
levels(outcomes$Q16)
outcomes$Q16
outcomes
outcomes <- select(data, Serial, ROUND, Q20, Q17, Q16, Q18)
outcomes <- select(data, Serial, ROUND, Q20, Q17, Q16, Q18)
outcomes
table(outcomes$Q16)
outcomes$Q16[outcomes$Q16 %in% c(1,2,3)] <- 1
outcomes$Q16[outcomes$Q16 %in% c(4,5,6)] <- 2
outcomes$Q16[outcomes$Q16 %in% c(7,8,9)] <- 3
outcomes$Q16[outcomes$Q16 %in% c(0, 10,11,12,13,14)] <- 99
outcomes
ames(outcomes) <- c("hh","round","imp", "needs", "exp_child_most", "cov_child_exp")
outcomes_json <- toJSON(unname(split(outcomes, 1:nrow(outcomes))))
sink("outcomes.json")
cat(outcomes_json)
sink()
names(outcomes) <- c("hh","round","imp", "needs", "exp_child_most", "cov_child_exp")
outcomes_json <- toJSON(unname(split(outcomes, 1:nrow(outcomes))))
sink("outcomes.json")
cat(outcomes_json)
sink()
table(outcomes$cov_child_exp)
outcomes$Q18[outcomes$Q18 %in% c(0)] <- 2
outcomes <- select(data, Serial, ROUND, Q20, Q17, Q16, Q18)
# merge Q16
# (1,2,3) -> 1 [Education expenditures]
# (4,5,6) -> 2 [Health cares expenditures]
# (7,8,9) -> 3 [Food expenditures]
# (10, 11, 12, 13, 14) -> 99 [Other expenditures]
#outcomes$Q16 <- as.numeric(levels(outcomes$Q16))[outcomes$Q16]
outcomes$Q16[outcomes$Q16 %in% c(1,2,3)] <- 1
outcomes$Q16[outcomes$Q16 %in% c(4,5,6)] <- 2
outcomes$Q16[outcomes$Q16 %in% c(7,8,9)] <- 3
outcomes$Q16[outcomes$Q16 %in% c(0, 10,11,12,13,14)] <- 99
outcomes$Q18[outcomes$Q18 %in% c(0)] <- 2
table(outcomes$cov_child_exp)
names(outcomes) <- c("hh","round","imp", "needs", "exp_child_most", "cov_child_exp")
outcomes_json <- toJSON(unname(split(outcomes, 1:nrow(outcomes))))
sink("outcomes.json")
cat(outcomes_json)
sink()
table(outcomes$cov_child_exp)
all_ben <- read.table("./all_beneficiaries.csv", sep = ",", header = TRUE, quote = "")
summary(all_ben)
all_ben <- tbl_df(all_ben)
all_ben
table(all_ben$ChildSex)
39070 + 40944
39070 / 80014
40944 / 80014
table(all_ben$Poverty.Threshold)
levels(all_ben$Poverty.Threshold)
all_ben$ageClass=cut(all_ben$ChildAge, breaks=c(0,2))
View(all_ben)
all_ben$ageClass=cut(all_ben$ChildAge, breaks=c(0,1,4,11,15,17))
View(all_ben)
table(all_ben$ageClass)
all_ben$ageClass=cut(all_ben$ChildAge, breaks=c(-1,1,4,11,15,17))
table(all_ben$ageClass)
View(all_ben)
all_gender = table(all_ben$ChildSex)
all_gender
all_gender <- all_gender / nrow(all_gender)
all_gender
all_gender <- all_gender / nrow(all_gender$ID)
all_gender <- all_gender / nrow(all_ben$ID)
nrow(all_ben$ID)
length(all_ben$ID)
all_gender <- all_gender / length(all_ben$ID)
all_gender
all_gender = table(all_ben$ChildSex)
all_gender
all_gender <- all_gender / length(all_ben$ID)
all_gender
all_ben$ageClass <- cut(all_ben$ChildAge, breaks=c(-1,1,4,11,15,17))
table(all_ben$ageClass)
all_age <- table(all_ben$ageClass)
all_age <- all_age / length(all_ben$ID)
all_age
table(all_ben$Poverty.Threshold)
all_pov <- table(all_ben$Poverty.Threshold)
all_pov <- all_pov / length(all_ben$ID)
all_pov
filter(all_ben, Poverty.Threshold != "")
all_ben <- filter(all_ben, Poverty.Threshold != "")
all_ben
all_gender <- table(all_ben$ChildSex)
all_gender <- all_gender / length(all_ben$ID)
all_gender
all_ben$ageClass <- cut(all_ben$ChildAge, breaks=c(-1,1,4,11,15,17))
all_age <- table(all_ben$ageClass)
all_age <- all_age / length(all_ben$ID)
all_age
all_pov <- table(all_ben$Poverty.Threshold)
all_pov <- all_pov / length(all_ben$ID)
all_pov
all_ben
table(all_ben$Poverty.Threshold)
all_ben <- filter(all_ben, Poverty.Threshold != "Children with specific need (not abject or absolut) ")
table(all_ben$Poverty.Threshold)
all_ben <- filter(all_ben, Poverty.Threshold != "Children with specific need (not abject or absolut)")
table(all_ben$Poverty.Threshold)
View(all_ben)
all_ben <- read.table("./all_beneficiaries.csv", sep = ",", header = TRUE, quote = "")
all_ben <- tbl_df(all_ben)
all_ben <- filter(all_ben, Poverty.Threshold != "")
all_gender <- table(all_ben$ChildSex)
all_gender <- all_gender / length(all_ben$ID)
all_ben
all_ben$ageClass <- cut(all_ben$ChildAge, breaks=c(-1,1,4,11,15,17))
all_age <- table(all_ben$ageClass)
all_age <- all_age / length(all_ben$ID)
all_pov <- table(all_ben$Poverty.Threshold)
all_pov <- all_pov / length(all_ben$ID)
all_pov
all_ben <- read.table("./all_beneficiaries.csv", sep = ",", header = TRUE, quote = "")
all_ben <- tbl_df(all_ben)
all_ben <- filter(all_ben, Poverty.Threshold != "")
all_gender <- table(all_ben$ChildSex)
all_gender <- all_gender / length(all_ben$ID)
all_gender
all_ben$ageClass <- cut(all_ben$ChildAge, breaks=c(-1,1,4,11,15,17))
all_age <- table(all_ben$ageClass)
all_age <- all_age / length(all_ben$ID)
all_age
all_pov <- table(all_ben$Poverty.Threshold)
all_pov <- all_pov / length(all_ben$ID)
all_pov
children
children <- bind_rows(c1,c2,c3,c4,c5,c6,c7,c8,c9)
children
children <- filter(children, age != "U")
children
children <- bind_rows(c1,c2,c3,c4,c5,c6,c7,c8,c9)
children
filter(children, age = "U")
filter(children, age == "U")
children <- filter(children, age != "U")
children
expenditures_child <- select(data, Serial, ROUND, Q14)
split_Q14 <- strsplit(as.character(expenditures_child$Q14), split = " ")
serial <- rep(expenditures_child$Serial, sapply(split_Q14, length))
round <- rep(expenditures_child$ROUND, sapply(split_Q14, length))
expenditures_child_single <- data.frame(serial = serial, round = round, Q14 = unlist(split_Q14))
expenditures_child_single <- tbl_df(expenditures_child_single)
# merge  0 -> 99, 1 -> 3, 8 -> 7, 14 -> 12,
expenditures_child_single$Q14 <- as.numeric(levels(expenditures_child_single$Q14))[expenditures_child_single$Q14]
expenditures_child_single$Q14[expenditures_child_single$Q14 %in% c(0)] <- 99
#expenditures_child_single$Q14[expenditures_child_single$Q14 %in% c(1)] <- 3
expenditures_child_single$Q14[expenditures_child_single$Q14 %in% c(8)] <- 7
expenditures_child_single$Q14[expenditures_child_single$Q14 %in% c(14)] <- 12
names(expenditures_child_single) <- c("hh","round","exp_child")
expenditures_child_single
table(expenditures_child_single$exp_child)
filter(expenditures_child_single, exp_child == 1 && round == 1)
filter(expenditures_child_single, exp_child == 1, round == 1)
filter(expenditures_child_single, exp_child != 1, round != 1)
filter(expenditures_child_single, exp_child == 1 & round == 1)
filter(expenditures_child_single, exp_child != 1 & round != 1)
expenditures_child_single
expenditures_child_single <- filter(expenditures_child_single, exp_child != 1 & round != 1)
expenditures_child_single
expenditures_child <- select(data, Serial, ROUND, Q14)
split_Q14 <- strsplit(as.character(expenditures_child$Q14), split = " ")
serial <- rep(expenditures_child$Serial, sapply(split_Q14, length))
round <- rep(expenditures_child$ROUND, sapply(split_Q14, length))
expenditures_child_single <- data.frame(serial = serial, round = round, Q14 = unlist(split_Q14))
expenditures_child_single <- tbl_df(expenditures_child_single)
# merge  0 -> 99, 1 -> 3, 8 -> 7, 14 -> 12,
expenditures_child_single$Q14 <- as.numeric(levels(expenditures_child_single$Q14))[expenditures_child_single$Q14]
expenditures_child_single$Q14[expenditures_child_single$Q14 %in% c(0)] <- 99
#expenditures_child_single$Q14[expenditures_child_single$Q14 %in% c(1)] <- 3
expenditures_child_single$Q14[expenditures_child_single$Q14 %in% c(8)] <- 7
expenditures_child_single$Q14[expenditures_child_single$Q14 %in% c(14)] <- 12
names(expenditures_child_single) <- c("hh","round","exp_child")
expenditures_child_single
filter(expenditures_child_single, exp_child == 1 & round == 1)
filter(expenditures_child_single, exp_child != 1 | round != 1)
expenditures_child_single <- filter(expenditures_child_single, exp_child != 1 | round != 1)
names(expenditures_child_single) <- c("hh","round","exp_child")
expenditures_child_json <- toJSON(unname(split(expenditures_child_single, 1:nrow(expenditures_child_single))))
sink("expenditures_children.json")
cat(expenditures_child_json)
sink()
expenditures_child <- select(data, Serial, ROUND, Q14)
split_Q14 <- strsplit(as.character(expenditures_child$Q14), split = " ")
serial <- rep(expenditures_child$Serial, sapply(split_Q14, length))
round <- rep(expenditures_child$ROUND, sapply(split_Q14, length))
expenditures_child_single <- data.frame(serial = serial, round = round, Q14 = unlist(split_Q14))
expenditures_child_single <- tbl_df(expenditures_child_single)
# merge  0 -> 99, 1 -> 3, 8 -> 7, 14 -> 12,
expenditures_child_single$Q14 <- as.numeric(levels(expenditures_child_single$Q14))[expenditures_child_single$Q14]
expenditures_child_single$Q14[expenditures_child_single$Q14 %in% c(0)] <- 99
#expenditures_child_single$Q14[expenditures_child_single$Q14 %in% c(1)] <- 3
expenditures_child_single$Q14[expenditures_child_single$Q14 %in% c(8)] <- 7
expenditures_child_single$Q14[expenditures_child_single$Q14 %in% c(14)] <- 12
# remove School fees (1) for round 1 - data collection process was wrong
# expenditures_child_single <- filter(expenditures_child_single, exp_child != 1 | round != 1)
# remove School fees (1) for all rounds - data collection process was wrong for round 1
expenditures_child_single <- filter(expenditures_child_single, exp_child != 1)
expenditures_child <- select(data, Serial, ROUND, Q14)
split_Q14 <- strsplit(as.character(expenditures_child$Q14), split = " ")
serial <- rep(expenditures_child$Serial, sapply(split_Q14, length))
round <- rep(expenditures_child$ROUND, sapply(split_Q14, length))
expenditures_child_single <- data.frame(serial = serial, round = round, Q14 = unlist(split_Q14))
expenditures_child_single <- tbl_df(expenditures_child_single)
# merge  0 -> 99, 1 -> 3, 8 -> 7, 14 -> 12,
expenditures_child_single$Q14 <- as.numeric(levels(expenditures_child_single$Q14))[expenditures_child_single$Q14]
expenditures_child_single$Q14[expenditures_child_single$Q14 %in% c(0)] <- 99
#expenditures_child_single$Q14[expenditures_child_single$Q14 %in% c(1)] <- 3
expenditures_child_single$Q14[expenditures_child_single$Q14 %in% c(8)] <- 7
expenditures_child_single$Q14[expenditures_child_single$Q14 %in% c(14)] <- 12
# remove School fees (1) for round 1 - data collection process was wrong
# expenditures_child_single <- filter(expenditures_child_single, exp_child != 1 | round != 1)
names(expenditures_child_single) <- c("hh","round","exp_child")
# remove School fees (1) for all rounds - data collection process was wrong for round 1
expenditures_child_single <- filter(expenditures_child_single, exp_child != 1)
expenditures_child_json <- toJSON(unname(split(expenditures_child_single, 1:nrow(expenditures_child_single))))
sink("expenditures_children.json")
cat(expenditures_child_json)
sink()
